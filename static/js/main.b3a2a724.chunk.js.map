{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","resp","wrap","_context","prev","next","axios","get","sent","console","log","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","res","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","updatedContact","match","params","put","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kTAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,iBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASC,OAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAEzE,IAAK,cACD,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAE5C,IAAK,iBACD,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,QAAQD,GAAMD,EAAUN,EAAOQ,QAAWF,MAEhH,QACI,OAAOP,IAINa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACItB,MAAQ,CACJK,SAAU,GACVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAHlEe,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAa2BC,IAAMC,IAAI,8CAbrC,OAacN,EAbdE,EAAAK,KAcQC,QAAQC,IAAIT,GACZvB,KAAKY,SAAS,CAAEzB,SAAUoC,EAAKU,OAfvC,wBAAAR,EAAAS,SAAAZ,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAmBQ,OACImB,EAAAf,EAAAgB,cAAC1D,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OACzBkB,KAAKqC,MAAMC,cArB5B3C,EAAA,CAA8B4C,aA2BjBC,EAAW9D,EAAQ8D,SCQjBC,6MAvDX3D,MAAQ,CACJ4D,iBAAiB,KAGrBC,oDAAgB,SAAArB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEFC,IAAMgB,OAAN,8CAAApD,OAA2DF,IAFzD,OAGRqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAHpCmC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAoB,GAAApB,EAAA,SAMRd,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IANpC,wBAAAmC,EAAAS,SAAAZ,EAAA,iJAUP,IAAAwB,EAAA9C,KAAA+C,EAC8B/C,KAAKqC,MAAMhD,QAAtCC,EADHyD,EACGzD,GAAI0D,EADPD,EACOC,KAAMC,EADbF,EACaE,MAAOC,EADpBH,EACoBG,MACjBR,EAAoB1C,KAAKlB,MAAzB4D,gBACR,OACIP,EAAAf,EAAAgB,cAACI,EAAD,KACK,SAAAxB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIwB,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,uBACXhB,EAAAf,EAAAgB,cAAA,UAAKY,EAAM,IAAX,IAAgBb,EAAAf,EAAAgB,cAAA,KAAGgB,QAAS,kBAAMN,EAAKlC,SAAS,CAAE8B,iBAAkBI,EAAKhE,MAAM4D,mBAC3ES,UAAU,mBAAmBE,MAAO,CAAEC,OAAQ,aAC9CnB,EAAAf,EAAAgB,cAAA,KAAGe,UAAU,eAAeE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OAC3EJ,QAASN,EAAKH,cAAcc,KAAKX,EAAMxD,EAAIqB,KAC/CwB,EAAAf,EAAAgB,cAACsB,EAAA,EAAD,CAAMC,GAAE,gBAAAnE,OAAkBF,IACtB6C,EAAAf,EAAAgB,cAAA,KAAGe,UAAU,oBACTE,MAAO,CACHC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPI,YAAa,YAK5BlB,EAAmBP,EAAAf,EAAAgB,cAAA,MAAIe,UAAU,cAC9BhB,EAAAf,EAAAgB,cAAA,MAAIe,UAAU,mBAAd,UAAwCF,EAAxC,KACAd,EAAAf,EAAAgB,cAAA,MAAIe,UAAU,mBAAd,UAAwCD,IACnC,eA3CfX,aCyBPsB,mLAxBP,OACI1B,EAAAf,EAAAgB,cAACI,EAAD,KACK,SAAAxB,GACwBA,EAAb7B,SACR,OACIgD,EAAAf,EAAAgB,cAACD,EAAAf,EAAM0C,SAAP,KACI3B,EAAAf,EAAAgB,cAAA,MAAIe,UAAU,kBACVhB,EAAAf,EAAAgB,cAAA,QAAMe,UAAU,eAAhB,WADJ,UAGCnC,EAAM7B,SAASO,IAAI,SAAAL,GAAO,OACvB8C,EAAAf,EAAAgB,cAAC2B,EAAD,CACIhD,IAAK1B,EAAQC,GACbD,QAASA,gBAdtBkD,aCAjByB,EAAS,SAAC3B,GAAU,IACd4B,EAAa5B,EAAb4B,SACR,OACI9B,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,2DACXhB,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,aACXhB,EAAAf,EAAAgB,cAAA,KAAG8B,KAAK,IAAIf,UAAU,gBAAgBc,GACtC9B,EAAAf,EAAAgB,cAAA,WACID,EAAAf,EAAAgB,cAAA,MAAIe,UAAU,sBACVhB,EAAAf,EAAAgB,cAAA,MAAIe,UAAU,YACVhB,EAAAf,EAAAgB,cAACsB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YAAWhB,EAAAf,EAAAgB,cAAA,KAAGe,UAAU,gBAA/C,SAEJhB,EAAAf,EAAAgB,cAAA,MAAIe,UAAU,YACVhB,EAAAf,EAAAgB,cAACsB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAAWhB,EAAAf,EAAAgB,cAAA,KAAGe,UAAU,gBAA1D,QAEJhB,EAAAf,EAAAgB,cAAA,MAAIe,UAAU,YACVhB,EAAAf,EAAAgB,cAACsB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAAWhB,EAAAf,EAAAgB,cAAA,KAAGe,UAAU,oBAApD,eAU5Ba,EAAOG,aAAe,CAClBF,SAAU,UAOCD,yCCjCTI,EAAiB,SAAAC,GASjB,IARFC,EAQED,EARFC,MACAtB,EAOEqB,EAPFrB,KACAhC,EAMEqD,EANFrD,MACAuD,EAKEF,EALFE,YACAvF,EAIEqF,EAJFrF,KACAwF,EAGEH,EAHFG,SACAC,EAEEJ,EAFFI,MAGA,OACItC,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,cACXhB,EAAAf,EAAAgB,cAAA,SAAOsC,QAAS1B,GAAOsB,GACvBnC,EAAAf,EAAAgB,cAAA,SACIpD,KAAMA,EACNgE,KAAMA,EACNG,UAAWwB,IAAW,+BAAgC,CAClDC,aAAcH,IAElBF,YAAaA,EACbvD,MAAOA,EACPwD,SAAUA,IAEbC,GACGtC,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,oBAAoBsB,KAgBnDL,EAAeD,aAAe,CAC1BnF,KAAM,QAEKoF,QCwDAS,6MAjGX/F,MAAQ,CACJkE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,MAGZC,+CAAW,SAAAzD,EAAOX,EAAUqE,GAAjB,IAAAC,EAAAjC,EAAAC,EAAAC,EAAAgC,EAAAC,EAAA,OAAAhE,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACPqD,EAAEI,iBADKH,EAGwBnF,EAAKhB,MAA5BkE,EAHDiC,EAGCjC,KAAMC,EAHPgC,EAGOhC,MAAOC,EAHd+B,EAGc/B,MAGR,KAATF,EANG,CAAAvB,EAAAE,KAAA,eAOH7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE9B,KAAM,sBAP7BvB,EAAA4D,OAAA,oBAUO,KAAVpC,EAVG,CAAAxB,EAAAE,KAAA,eAWH7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE7B,MAAO,uBAX9BxB,EAAA4D,OAAA,oBAcO,KAAVnC,EAdG,CAAAzB,EAAAE,KAAA,gBAeH7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE5B,MAAO,uBAf9BzB,EAAA4D,OAAA,yBAkBDH,EAAa,CACflC,OACAC,QACAC,SArBGzB,EAAAE,KAAA,GAwBWC,IAAM0D,KAAN,6CAAyDJ,GAxBpE,QAwBDC,EAxBC1D,EAAAK,KAyBPnB,EAAS,CAAE3B,KAAM,cAAeO,QAAS4F,EAAIlD,OAG7CnC,EAAKc,SAAS,CACVoC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,KAGZhF,EAAKuC,MAAMkD,QAAQC,KAAK,KAnCjB,yBAAA/D,EAAAS,SAAAZ,gEAsCXkD,SAAW,SAAAQ,GAAC,OAAIlF,EAAKc,SAAL3B,OAAAwG,EAAA,EAAAxG,CAAA,GAAiB+F,EAAEU,OAAO1C,KAAOgC,EAAEU,OAAO1E,iFAEjD,IAAA8B,EAAA9C,KAAA2F,EACkC3F,KAAKlB,MAApCkE,EADH2C,EACG3C,KAAMC,EADT0C,EACS1C,MAAOC,EADhByC,EACgBzC,MAAO4B,EADvBa,EACuBb,OAC5B,OACI3C,EAAAf,EAAAgB,cAACI,EAAD,KACK,SAAAxB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIwB,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,aACXhB,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,eAAf,eACAhB,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,aACXhB,EAAAf,EAAAgB,cAAA,QAAM2C,SAAUjC,EAAKiC,SAAStB,KAAKX,EAAMnC,IACrCwB,EAAAf,EAAAgB,cAACwD,EAAD,CACItB,MAAM,OACNtB,KAAK,OACLuB,YAAY,gBACZvD,MAAOgC,EACPwB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO9B,OAElBb,EAAAf,EAAAgB,cAACwD,EAAD,CACItB,MAAM,QACNtB,KAAK,QACLhE,KAAK,QACLuF,YAAY,iBACZvD,MAAOiC,EACPuB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO7B,QAElBd,EAAAf,EAAAgB,cAACwD,EAAD,CACItB,MAAM,QACNtB,KAAK,QACLuB,YAAY,iBACZvD,MAAOkC,EACPsB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO5B,QAGlBf,EAAAf,EAAAgB,cAAA,SAAOpD,KAAK,SAASgC,MAAM,cAAcmC,UAAU,wCArF9DZ,aCOVsD,EAVD,WACV,OACI1D,EAAAf,EAAAgB,cAAA,WACID,EAAAf,EAAAgB,cAAA,MAAIe,UAAU,aAAd,yBACAhB,EAAAf,EAAAgB,cAAA,KAAGe,UAAU,QAAb,iCACAhB,EAAAf,EAAAgB,cAAA,KAAGe,UAAU,kBAAb,mBCIG2C,EATE,WACb,OACI3D,EAAAf,EAAAgB,cAAA,WACID,EAAAf,EAAAgB,cAAA,MAAIe,UAAU,aAAd,sBACAhB,EAAAf,EAAAgB,cAAA,KAAGe,UAAU,QAAb,qCCuBG4C,6MA1BXjH,MAAQ,CACJkH,MAAO,GACPC,KAAM,uFAEU,IAAAnD,EAAA9C,KAChBkG,MAAM,gDACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAlE,GACFa,EAAKlC,SAAS,CACVoF,MAAO/D,EAAK+D,MACZC,KAAMhE,EAAKe,OAEfjB,QAAQC,IAAI,SAAUC,GACtBF,QAAQC,IAAIc,EAAKhE,0CAIpB,IAAAmG,EACmBjF,KAAKlB,MAArBkH,EADHf,EACGe,MAAOC,EADVhB,EACUgB,KACf,OACI9D,EAAAf,EAAAgB,cAAA,WACID,EAAAf,EAAAgB,cAAA,UAAK4D,EAAL,IAAaC,EAAb,aAtBG1D,aCuHJ+D,6MAnHXxH,MAAQ,CACJkE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,MAeZC,+CAAW,SAAAzD,EAAOX,EAAUqE,GAAjB,IAAAC,EAAAjC,EAAAC,EAAAC,EAAAqD,EAAAjH,EAAA6F,EAAA,OAAAhE,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACPqD,EAAEI,iBADKH,EAGwBnF,EAAKhB,MAA5BkE,EAHDiC,EAGCjC,KAAMC,EAHPgC,EAGOhC,MAAOC,EAHd+B,EAGc/B,MAGR,KAATF,EANG,CAAAvB,EAAAE,KAAA,eAOH7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE9B,KAAM,sBAP7BvB,EAAA4D,OAAA,oBAUO,KAAVpC,EAVG,CAAAxB,EAAAE,KAAA,eAWH7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE7B,MAAO,uBAX9BxB,EAAA4D,OAAA,oBAcO,KAAVnC,EAdG,CAAAzB,EAAAE,KAAA,gBAeH7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE5B,MAAO,uBAf9BzB,EAAA4D,OAAA,yBAmBDkB,EAAiB,CACnBvD,OACAC,QACAC,SAGI5D,EAAOQ,EAAKuC,MAAMmE,MAAMC,OAAxBnH,GAzBDmC,EAAAE,KAAA,GA2BWC,IAAM8E,IAAN,8CAAAlH,OAAwDF,GAAMiH,GA3BzE,QA2BDpB,EA3BC1D,EAAAK,KA6BPnB,EAAS,CACL3B,KAAM,iBACNO,QAAS4F,EAAIlD,OAGjBnC,EAAKc,SAAS,CACVoC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,KAGZhF,EAAKuC,MAAMkD,QAAQC,KAAK,KAzCjB,yBAAA/D,EAAAS,SAAAZ,gEA4CXkD,SAAW,SAAAQ,GAAC,OAAIlF,EAAKc,SAAL3B,OAAAwG,EAAA,EAAAxG,CAAA,GAAiB+F,EAAEU,OAAO1C,KAAOgC,EAAEU,OAAO1E,qNAvD9C1B,EAAOU,KAAKqC,MAAMmE,MAAMC,OAAxBnH,YACUsC,IAAMC,IAAN,8CAAArC,OAAwDF,WAApE6F,SAEA9F,EAAU8F,EAAIlD,KAEpBjC,KAAKY,SAAS,CACVoC,KAAM3D,EAAQ2D,KACdC,MAAO5D,EAAQ4D,MACfC,MAAO7D,EAAQ6D,2IAiDd,IAAAJ,EAAA9C,KAAA2F,EACkC3F,KAAKlB,MAApCkE,EADH2C,EACG3C,KAAMC,EADT0C,EACS1C,MAAOC,EADhByC,EACgBzC,MAAO4B,EADvBa,EACuBb,OAC5B,OACI3C,EAAAf,EAAAgB,cAACI,EAAD,KACK,SAAAxB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIwB,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,aACXhB,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,eAAf,gBACAhB,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,aACXhB,EAAAf,EAAAgB,cAAA,QAAM2C,SAAUjC,EAAKiC,SAAStB,KAAKX,EAAMnC,IACrCwB,EAAAf,EAAAgB,cAACwD,EAAD,CACItB,MAAM,OACNtB,KAAK,OACLuB,YAAY,gBACZvD,MAAOgC,EACPwB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO9B,OAElBb,EAAAf,EAAAgB,cAACwD,EAAD,CACItB,MAAM,QACNtB,KAAK,QACLhE,KAAK,QACLuF,YAAY,iBACZvD,MAAOiC,EACPuB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO7B,QAElBd,EAAAf,EAAAgB,cAACwD,EAAD,CACItB,MAAM,QACNtB,KAAK,QACLuB,YAAY,iBACZvD,MAAOkC,EACPsB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO5B,QAGlBf,EAAAf,EAAAgB,cAAA,SAAOpD,KAAK,SAASgC,MAAM,iBAAiBmC,UAAU,wCAvGhEZ,aC+BXoE,MAtBf,WACE,OACExE,EAAAf,EAAAgB,cAACwE,EAAD,KACEzE,EAAAf,EAAAgB,cAACsB,EAAA,EAAD,KACEvB,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,OACbhB,EAAAf,EAAAgB,cAACyE,EAAD,CAAQ5C,SAAS,qBACjB9B,EAAAf,EAAAgB,cAAA,OAAKe,UAAU,aACbhB,EAAAf,EAAAgB,cAAC0E,EAAA,EAAD,KACE3E,EAAAf,EAAAgB,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpD,IACjC1B,EAAAf,EAAAgB,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWpC,IAC5C1C,EAAAf,EAAAgB,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWX,IACjDnE,EAAAf,EAAAgB,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWpB,IACtC1D,EAAAf,EAAAgB,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWlB,IACrC5D,EAAAf,EAAAgB,cAAC0E,EAAA,EAAD,CAAOG,UAAWnB,UCfZoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MACvB,2DCbNc,IAASC,OAAOpF,EAAAf,EAAAgB,cAACoF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC","file":"static/js/main.b3a2a724.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     axios.get('https://jsonplaceholder.typicode.com/users')\r\n    //         .then(res => this.setState({ contacts: res.data }));\r\n    // }\r\n\r\n    async componentDidMount() {\r\n        const resp = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        console.log(resp);\r\n        this.setState({ contacts: resp.data });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nclass Contact extends Component {\r\n\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        }\r\n        catch (e) {\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name}{' '} <i onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}\r\n                                className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }} />\r\n                                <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)} />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            color: 'black',\r\n                                            marginRight: '1rem'\r\n                                        }}></i>\r\n                                </Link>\r\n\r\n                            </h4>\r\n                            {showContactInfo ? (<ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email: {email} </li>\r\n                                <li className=\"list-group-item\">Phone: {phone}</li>\r\n                            </ul>) : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span>  List\r\n                            </h1>\r\n                            {value.contacts.map(contact =>\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />)}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i>Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error &&\r\n                <div className=\"invalid-feedback\">{error}</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for Errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is requried' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is requried' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is requried' } });\r\n            return;\r\n        }\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact)\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n\r\n        //CLear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='card mb-3'>\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">404 Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    title: data.title,\r\n                    body: data.name\r\n                });\r\n                console.log(\"GENtle\", data);\r\n                console.log(this.state);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title} {body} </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for Errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is requried' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is requried' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is requried' } });\r\n            return;\r\n        }\r\n\r\n        const updatedContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updatedContact);\r\n\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT',\r\n            payload: res.data\r\n        });\r\n        //CLear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='card mb-3'>\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddContact from './components/contacts/AddContact';\nimport { Provider } from './context';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/Test';\nimport EditContact from './components/contacts/EditContact';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager!\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}